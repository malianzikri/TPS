
package id.go.beacukai.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "TPSServices", targetNamespace = "http://services.beacukai.go.id/", wsdlLocation = "file:/E:/services/service.asmx.wsdl")
public class TPSServices
    extends Service
{

    private final static URL TPSSERVICES_WSDL_LOCATION;
    private final static WebServiceException TPSSERVICES_EXCEPTION;
    private final static QName TPSSERVICES_QNAME = new QName("http://services.beacukai.go.id/", "TPSServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/E:/services/service.asmx.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TPSSERVICES_WSDL_LOCATION = url;
        TPSSERVICES_EXCEPTION = e;
    }

    public TPSServices() {
        super(__getWsdlLocation(), TPSSERVICES_QNAME);
    }

    public TPSServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns TPSServicesSoap
     */
    @WebEndpoint(name = "TPSServicesSoap")
    public TPSServicesSoap getTPSServicesSoap() {
        return super.getPort(new QName("http://services.beacukai.go.id/", "TPSServicesSoap"), TPSServicesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TPSServicesSoap
     */
    @WebEndpoint(name = "TPSServicesSoap")
    public TPSServicesSoap getTPSServicesSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.beacukai.go.id/", "TPSServicesSoap"), TPSServicesSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns TPSServicesSoap
     */
    @WebEndpoint(name = "TPSServicesSoap12")
    public TPSServicesSoap getTPSServicesSoap12() {
        return super.getPort(new QName("http://services.beacukai.go.id/", "TPSServicesSoap12"), TPSServicesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TPSServicesSoap
     */
    @WebEndpoint(name = "TPSServicesSoap12")
    public TPSServicesSoap getTPSServicesSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.beacukai.go.id/", "TPSServicesSoap12"), TPSServicesSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TPSSERVICES_EXCEPTION!= null) {
            throw TPSSERVICES_EXCEPTION;
        }
        return TPSSERVICES_WSDL_LOCATION;
    }

}
